{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\OneDrive\\\\Desktop\\\\Mainproject\\\\quiz\\\\src\\\\Componend\\\\Javapage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Javapage = () => {\n  _s();\n  document.body.style.fontFamily = 'Nunito, sans-serif';\n  document.body.style.background = \"#1976D2\";\n  document.body.style.color = \"white\";\n  const but = {\n    position: 'relative',\n    left: '1400px',\n    bottom: '330px',\n    width: '100px',\n    height: '200px',\n    background: '#292828'\n  };\n  const but1 = {\n    position: 'relative',\n    left: '1100px',\n    top: '60px',\n    width: '160px',\n    height: '80px',\n    background: 'green'\n  };\n  const [selectedOptions, setSelectedOptions] = useState(Array(10).fill(''));\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Define currentQuestionIndex\n\n  const handleOptionChange = (index, event) => {\n    const newSelectedOptions = [...selectedOptions];\n    newSelectedOptions[index] = event.target.value;\n    setSelectedOptions(newSelectedOptions);\n  };\n  const calculateScore = () => {\n    let totalScore = 0;\n    for (let i = 0; i < questions.length; i++) {\n      if (selectedOptions[i] === questions[i].answer) {\n        totalScore++;\n      }\n    }\n    return totalScore; // Return the calculated score\n  };\n  const handleNextQuestion = () => {\n    if (selectedOptions[currentQuestionIndex] !== '') {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      alert('Please select an answer before moving to the next question.');\n    }\n  };\n  const handleCalculateScore = () => {\n    const calculatedScore = calculateScore();\n    navigate('/Scorepage', {\n      state: {\n        score: calculatedScore,\n        selectedOptions,\n        questions\n      }\n    });\n  };\n  const [questions] = useState([{\n    question: \"1. What is Java?\",\n    options: [\"A programming language\", \"A coffee brand\", \"An operating system\", \"A web browser\"],\n    answer: \"A programming language\"\n  }, {\n    question: \"2. Which keyword is used to define a class in Java?\",\n    options: [\"class\", \"void\", \"new\", \"this\"],\n    answer: \"class\"\n  }, {\n    question: \"3. What is the entry point of a Java program?\",\n    options: [\"public static void main(String[] args)\", \"public static void start(String[] args)\", \"public static void run(String[] args)\", \"public static void execute(String[] args)\"],\n    answer: \"public static void main(String[] args)\"\n  }, {\n    question: \"4. Which data type is used to store single characters in Java?\",\n    options: [\"char\", \"int\", \"String\", \"boolean\"],\n    answer: \"char\"\n  }, {\n    question: \"5. What does the 'extends' keyword indicate in Java?\",\n    options: [\"Inheritance\", \"Overloading\", \"Abstraction\", \"Encapsulation\"],\n    answer: \"Inheritance\"\n  }, {\n    question: \"6. Which statement is used to terminate a loop in Java?\",\n    options: [\"break\", \"exit\", \"continue\", \"return\"],\n    answer: \"break\"\n  }, {\n    question: \"7. What is the purpose of the 'static' keyword in Java?\",\n    options: [\"To create class-level variables and methods\", \"To create instance-level variables and methods\", \"To define constants\", \"To restrict access to variables and methods\"],\n    answer: \"To create class-level variables and methods\"\n  }, {\n    question: \"8. What is the default value of a boolean variable in Java?\",\n    options: [\"false\", \"true\", \"0\", \"1\"],\n    answer: \"false\"\n  }, {\n    question: \"9. Which method is used to compare two objects for equality in Java?\",\n    options: [\"equals()\", \"compareTo()\", \"compare()\", \"==\"],\n    answer: \"equals()\"\n  }, {\n    question: \"10. What is the output of 'System.out.println(10 + 20 + 'Java')'?\",\n    options: [\"30Java\", \"1020Java\", \"Error\", \"Java1020\"],\n    answer: \"30Java\"\n  }\n\n  // Add more questions and options as needed\n  ]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'black',\n        width: '90%',\n        height: '750px',\n        marginTop: '80px',\n        marginLeft: '100px'\n      },\n      className: \"rounded-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl ml-44  pt-32\",\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 pt-20 ml-56 text-4xl\",\n        children: [questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option,\n            checked: selectedOptions[currentQuestionIndex] === option,\n            onChange: e => handleOptionChange(currentQuestionIndex, e),\n            className: \"form-radio text-blue-500 h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-24\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-4xl\",\n            style: {\n              color: '#3d8fdb'\n            },\n            children: \"Selected Answer : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-5xl\",\n            style: {\n              color: 'green'\n            },\n            children: selectedOptions[currentQuestionIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), currentQuestionIndex === questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but1,\n          className: \"rounded-full\",\n          onClick: handleCalculateScore,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but,\n          className: \"rounded-full\",\n          onClick: handleNextQuestion,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight,\n            className: \"text-3xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Javapage, \"Ftrv3t7CRpa9t8OGc9oAoPKwn8E=\", false, function () {\n  return [useNavigate];\n});\n_c = Javapage;\nexport default Javapage;\nvar _c;\n$RefreshReg$(_c, \"Javapage\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faArrowRight","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Javapage","_s","document","body","style","fontFamily","background","color","but","position","left","bottom","width","height","but1","top","selectedOptions","setSelectedOptions","Array","fill","navigate","currentQuestionIndex","setCurrentQuestionIndex","handleOptionChange","index","event","newSelectedOptions","target","value","calculateScore","totalScore","i","questions","length","answer","handleNextQuestion","alert","handleCalculateScore","calculatedScore","state","score","question","options","children","marginTop","marginLeft","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","checked","onChange","e","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/ACER/OneDrive/Desktop/Mainproject/quiz/src/Componend/Javapage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Javapage = () => {\r\n    document.body.style.fontFamily='Nunito, sans-serif';\r\n    document.body.style.background=\"#1976D2\"\r\n    document.body.style.color=\"white\"\r\n\r\n    const but={\r\n        position:'relative',\r\n        left:'1400px',\r\n        bottom:'330px',\r\n       \r\n        width:'100px',\r\n        height:'200px',\r\n        background:'#292828'\r\n    }\r\n\r\n    const but1={\r\n      position:'relative',\r\n        left:'1100px',\r\n        top:'60px',\r\n       \r\n        width:'160px',\r\n        height:'80px',\r\n        background:'green'\r\n    }\r\n    \r\n    const [selectedOptions, setSelectedOptions] = useState(Array(10).fill(''));\r\n   \r\n    const navigate = useNavigate();\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0); // Define currentQuestionIndex\r\n\r\n    const handleOptionChange = (index, event) => {\r\n      const newSelectedOptions = [...selectedOptions];\r\n      newSelectedOptions[index] = event.target.value;\r\n      setSelectedOptions(newSelectedOptions);\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    let totalScore = 0;\r\n    for (let i = 0; i < questions.length; i++) {\r\n        if (selectedOptions[i] === questions[i].answer) {\r\n            totalScore++;\r\n        }\r\n    }\r\n    return totalScore; // Return the calculated score\r\n};\r\nconst handleNextQuestion = () => {\r\n    if (selectedOptions[currentQuestionIndex] !== '') {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n        alert('Please select an answer before moving to the next question.');\r\n    }\r\n};\r\nconst handleCalculateScore = () => {\r\n    const calculatedScore = calculateScore();\r\n   \r\n    navigate('/Scorepage', { state: { score: calculatedScore, selectedOptions, questions } });\r\n};\r\n\r\n\r\n\r\n      const [questions] = useState([\r\n        {\r\n            question: \"1. What is Java?\",\r\n            options: [\r\n                \"A programming language\",\r\n                \"A coffee brand\",\r\n                \"An operating system\",\r\n                \"A web browser\",\r\n            ],\r\n            answer: \"A programming language\"\r\n        },\r\n        {\r\n            question: \"2. Which keyword is used to define a class in Java?\",\r\n            options: [\r\n                \"class\",\r\n                \"void\",\r\n                \"new\",\r\n                \"this\",\r\n            ],\r\n            answer: \"class\"\r\n        },\r\n        {\r\n            question: \"3. What is the entry point of a Java program?\",\r\n            options: [\r\n                \"public static void main(String[] args)\",\r\n                \"public static void start(String[] args)\",\r\n                \"public static void run(String[] args)\",\r\n                \"public static void execute(String[] args)\",\r\n            ],\r\n            answer: \"public static void main(String[] args)\"\r\n        },\r\n        {\r\n            question: \"4. Which data type is used to store single characters in Java?\",\r\n            options: [\r\n                \"char\",\r\n                \"int\",\r\n                \"String\",\r\n                \"boolean\",\r\n            ],\r\n            answer: \"char\"\r\n        },\r\n        {\r\n            question: \"5. What does the 'extends' keyword indicate in Java?\",\r\n            options: [\r\n                \"Inheritance\",\r\n                \"Overloading\",\r\n                \"Abstraction\",\r\n                \"Encapsulation\",\r\n            ],\r\n            answer: \"Inheritance\"\r\n        },\r\n        {\r\n            question: \"6. Which statement is used to terminate a loop in Java?\",\r\n            options: [\r\n                \"break\",\r\n                \"exit\",\r\n                \"continue\",\r\n                \"return\",\r\n            ],\r\n            answer: \"break\"\r\n        },\r\n        {\r\n            question: \"7. What is the purpose of the 'static' keyword in Java?\",\r\n            options: [\r\n                \"To create class-level variables and methods\",\r\n                \"To create instance-level variables and methods\",\r\n                \"To define constants\",\r\n                \"To restrict access to variables and methods\",\r\n            ],\r\n            answer: \"To create class-level variables and methods\"\r\n        },\r\n        {\r\n            question: \"8. What is the default value of a boolean variable in Java?\",\r\n            options: [\r\n                \"false\",\r\n                \"true\",\r\n                \"0\",\r\n                \"1\",\r\n            ],\r\n            answer: \"false\"\r\n        },\r\n        {\r\n            question: \"9. Which method is used to compare two objects for equality in Java?\",\r\n            options: [\r\n                \"equals()\",\r\n                \"compareTo()\",\r\n                \"compare()\",\r\n                \"==\",\r\n            ],\r\n            answer: \"equals()\"\r\n        },\r\n        {\r\n            question: \"10. What is the output of 'System.out.println(10 + 20 + 'Java')'?\",\r\n            options: [\r\n                \"30Java\",\r\n                \"1020Java\",\r\n                \"Error\",\r\n                \"Java1020\",\r\n            ],\r\n            answer: \"30Java\"\r\n        }\r\n        \r\n        \r\n            // Add more questions and options as needed\r\n          ]);\r\n\r\n          \r\n      \r\n\r\n\r\n  return ( \r\n    <>\r\n        <div style={{ background: 'black', width: '90%', height: '750px', marginTop: '80px', marginLeft: '100px' }} className='rounded-full'>\r\n                <h1 className='text-4xl ml-44  pt-32'>{questions[currentQuestionIndex].question}</h1>\r\n                <div className=\"flex flex-col gap-2 pt-20 ml-56 text-4xl\">\r\n                    {questions[currentQuestionIndex].options.map((option, index) => (\r\n                        <label key={index} className=\"inline-flex items-center\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                value={option}\r\n                                checked={selectedOptions[currentQuestionIndex] === option}\r\n                                onChange={(e) => handleOptionChange(currentQuestionIndex, e)}\r\n                                className=\"form-radio text-blue-500 h-5 w-5\"\r\n                            />\r\n                            <span className=\"ml-2\">{option}</span>\r\n                        </label>\r\n                    ))}\r\n                    <p className=\"mt-24\">\r\n                        <span className='text-4xl' style={{ color: '#3d8fdb' }}>Selected Answer : </span>\r\n                        <span className='text-5xl' style={{ color: 'green' }}>{selectedOptions[currentQuestionIndex]}</span>\r\n                    </p>\r\n                    {currentQuestionIndex === questions.length - 1 ? (\r\n                        <button style={but1} className='rounded-full' onClick={handleCalculateScore}>\r\n                           Submit\r\n                        </button>\r\n                    ) : (\r\n                        <button style={but} className='rounded-full' onClick={handleNextQuestion}>\r\n                            <FontAwesomeIcon icon={faArrowRight} className=\"text-3xl\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n          \r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Javapage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}