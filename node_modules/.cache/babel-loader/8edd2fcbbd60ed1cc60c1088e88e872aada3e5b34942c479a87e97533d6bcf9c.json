{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\OneDrive\\\\Desktop\\\\Mainproject\\\\quiz\\\\src\\\\Componend\\\\Htmlpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Htmlpage = () => {\n  _s();\n  // Define the questions and options as an array of objects\n  const [questions] = useState([{\n    question: '1. What does HTML stand for?',\n    options: ['Hyper Text Markup Language', 'High Tech Markup Language', 'Hyperlink and Text Markup Language', 'Home Tool Markup Language']\n  }\n  // Add more questions and options as needed\n  ]);\n\n  // State to keep track of the current question index\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // State to keep track of the selected option\n  const [selectedOption, setSelectedOption] = useState('');\n\n  // Function to handle option change\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Function to handle button click for showing the next question\n  const handleNextQuestion = () => {\n    // Check if an option is selected\n    if (!selectedOption) {\n      alert('Please select an option');\n      return;\n    }\n    // Check if it's the last question\n    if (currentQuestionIndex === questions.length - 1) {\n      alert('End of questions');\n      return;\n    }\n    // Increment the current question index\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    // Clear the selected option for the next question\n    setSelectedOption('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'black',\n        width: '80%',\n        height: '750px',\n        marginTop: '80px',\n        marginLeft: '200px'\n      },\n      className: \"rounded-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl ml-48  pt-32\",\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 pt-20 ml-56 text-4xl\",\n        children: [questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: handleOptionChange,\n            className: \"form-radio text-blue-500 h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#3d8fdb'\n            },\n            children: \"Selected Answer : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'green'\n            },\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but,\n          className: \"rounded-full\",\n          onClick: handleNextQuestion,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight,\n            className: \"text-3xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Htmlpage, \"VawViuc3TuTTE8UJ/QUbfaNzoV8=\");\n_c = Htmlpage;\nexport default Htmlpage;\nvar _c;\n$RefreshReg$(_c, \"Htmlpage\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","Htmlpage","_s","questions","question","options","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","handleOptionChange","event","target","value","handleNextQuestion","alert","length","children","style","background","width","height","marginTop","marginLeft","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","checked","onChange","color","but","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/ACER/OneDrive/Desktop/Mainproject/quiz/src/Componend/Htmlpage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Htmlpage = () => {\r\n  // Define the questions and options as an array of objects\r\n  const [questions] = useState([\r\n    {\r\n      question: '1. What does HTML stand for?',\r\n      options: [\r\n        'Hyper Text Markup Language',\r\n        'High Tech Markup Language',\r\n        'Hyperlink and Text Markup Language',\r\n        'Home Tool Markup Language',\r\n      ],\r\n    },\r\n    // Add more questions and options as needed\r\n  ]);\r\n\r\n  // State to keep track of the current question index\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n  // State to keep track of the selected option\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  // Function to handle option change\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  // Function to handle button click for showing the next question\r\n  const handleNextQuestion = () => {\r\n    // Check if an option is selected\r\n    if (!selectedOption) {\r\n      alert('Please select an option');\r\n      return;\r\n    }\r\n    // Check if it's the last question\r\n    if (currentQuestionIndex === questions.length - 1) {\r\n      alert('End of questions');\r\n      return;\r\n    }\r\n    // Increment the current question index\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    // Clear the selected option for the next question\r\n    setSelectedOption('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ background: 'black', width: '80%', height: '750px', marginTop: '80px', marginLeft: '200px' }} className='rounded-full'>\r\n\r\n        <h1 className='text-4xl ml-48  pt-32'>{questions[currentQuestionIndex].question}</h1>\r\n        <div className=\"flex flex-col gap-2 pt-20 ml-56 text-4xl\">\r\n          {questions[currentQuestionIndex].options.map((option, index) => (\r\n            <label key={index} className=\"inline-flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                value={option}\r\n                checked={selectedOption === option}\r\n                onChange={handleOptionChange}\r\n                className=\"form-radio text-blue-500 h-5 w-5\"\r\n              />\r\n              <span className=\"ml-2\">{option}</span>\r\n            </label>\r\n          ))}\r\n          <p className=\"mt-20\">\r\n            <span style={{ color: '#3d8fdb' }}>Selected Answer : </span>\r\n            <span style={{ color: 'green' }}>{selectedOption}</span>\r\n          </p>\r\n          <button style={but} className='rounded-full' onClick={handleNextQuestion}>\r\n            <FontAwesomeIcon icon={faArrowRight} className=\"text-3xl\" />\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Htmlpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}