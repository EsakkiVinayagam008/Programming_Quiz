{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\OneDrive\\\\Desktop\\\\Mainproject\\\\quiz\\\\src\\\\Componend\\\\Scorepage.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scorepage = ({\n  location\n}) => {\n  const {\n    score,\n    selectedOptions,\n    questions\n  } = location.state || {};\n\n  // Apply styles\n  document.body.style.fontFamily = 'Nunito, sans-serif';\n  document.body.style.background = \"#1976D2\";\n  document.body.style.color = \"white\";\n  const renderAnswer = (questionIndex, selectedOption) => {\n    const correctAnswer = questions[questionIndex].answer;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: questions[questionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), \":\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: selectedOption === correctAnswer ? 'green' : 'red'\n        },\n        children: selectedOption === correctAnswer ? 'Correct' : 'Wrong'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Answers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedOptions && questions && selectedOptions.map((option, index) => renderAnswer(index, option))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Scorepage;\nexport default Scorepage;\nvar _c;\n$RefreshReg$(_c, \"Scorepage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Scorepage","location","score","selectedOptions","questions","state","document","body","style","fontFamily","background","color","renderAnswer","questionIndex","selectedOption","correctAnswer","answer","children","question","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","_c","$RefreshReg$"],"sources":["C:/Users/ACER/OneDrive/Desktop/Mainproject/quiz/src/Componend/Scorepage.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Scorepage = ({ location }) => {\r\n    const { score, selectedOptions, questions } = location.state || {};\r\n\r\n    // Apply styles\r\n    document.body.style.fontFamily = 'Nunito, sans-serif';\r\n    document.body.style.background = \"#1976D2\";\r\n    document.body.style.color = \"white\";\r\n\r\n    const renderAnswer = (questionIndex, selectedOption) => {\r\n        const correctAnswer = questions[questionIndex].answer;\r\n        return (\r\n            <p key={questionIndex}>\r\n                <span>{questions[questionIndex].question}</span>:&nbsp;\r\n                <span style={{ color: selectedOption === correctAnswer ? 'green' : 'red' }}>\r\n                    {selectedOption === correctAnswer ? 'Correct' : 'Wrong'}\r\n                </span>\r\n            </p>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Score: {score}</h1>\r\n            <h2>Answers:</h2>\r\n            <div>\r\n                {selectedOptions && questions && selectedOptions.map((option, index) => renderAnswer(index, option))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scorepage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChC,MAAM;IAAEC,KAAK;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGH,QAAQ,CAACI,KAAK,IAAI,CAAC,CAAC;;EAElE;EACAC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,oBAAoB;EACrDH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,SAAS;EAC1CJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,KAAK,GAAG,OAAO;EAEnC,MAAMC,YAAY,GAAGA,CAACC,aAAa,EAAEC,cAAc,KAAK;IACpD,MAAMC,aAAa,GAAGX,SAAS,CAACS,aAAa,CAAC,CAACG,MAAM;IACrD,oBACIjB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAOb,SAAS,CAACS,aAAa,CAAC,CAACK;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,SAChD,eAAAvB,OAAA;QAAMS,KAAK,EAAE;UAAEG,KAAK,EAAEG,cAAc,KAAKC,aAAa,GAAG,OAAO,GAAG;QAAM,CAAE;QAAAE,QAAA,EACtEH,cAAc,KAAKC,aAAa,GAAG,SAAS,GAAG;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA,GAJHT,aAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKlB,CAAC;EAEZ,CAAC;EAED,oBACIvB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,GAAI,SAAO,EAACf,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBvB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAAkB,QAAA,EACKd,eAAe,IAAIC,SAAS,IAAID,eAAe,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAKb,YAAY,CAACa,KAAK,EAAED,MAAM,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACI,EAAA,GA7BI1B,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}