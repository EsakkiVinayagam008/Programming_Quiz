{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\OneDrive\\\\Desktop\\\\Mainproject\\\\quiz\\\\src\\\\Componend\\\\Htmlpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Htmlpage = () => {\n  _s();\n  document.body.style.fontFamily = 'Roboto Slab, serif';\n  document.body.style.background = \"#3d8fdb\";\n  document.body.style.color = \"white\";\n  const but = {\n    position: 'relative',\n    left: '1200px',\n    bottom: '330px',\n    width: '100px',\n    height: '200px',\n    background: '#292828'\n  };\n  const [selectedOption, setSelectedOption] = useState('');\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const [questions] = useState([{\n    question: '1. What does HTML stand for?',\n    options: ['Hyper Text Markup Language', 'High Tech Markup Language', 'Hyperlink and Text Markup Language', 'Home Tool Markup Language'],\n    answer: 'Hyper Text Markup Language'\n  }, {\n    question: '2. Which HTML tag is used to define an unordered list?',\n    options: ['<ul>', '<ol>', '<li>', '<list>'],\n    answer: '<ul>'\n  }, {\n    question: '3. What is the correct HTML tag for inserting a line break?',\n    options: ['<br>', '<lb>', '<break>', '<newline>'],\n    answer: '<br>'\n  }, {\n    question: '4. What does the HTML <img> tag stand for?',\n    options: ['Image', 'Insert', 'Import', 'Include'],\n    answer: 'Image'\n  }, {\n    question: '5. Which attribute is used to define inline styles in HTML?',\n    options: ['style', 'class', 'id', 'display'],\n    answer: 'style'\n  }, {\n    question: '6. What is the correct HTML for creating a hyperlink?',\n    options: ['<a href=\"http://www.example.com\">Link</a>', '<link href=\"http://www.example.com\">', '<href=\"http://www.example.com\">Link</href>', '<hyperlink=\"http://www.example.com\">Link</hyperlink>'],\n    answer: '<a href=\"http://www.example.com\">Link</a>'\n  }, {\n    question: '7. Which HTML tag is used to define the header for a document or section?',\n    options: ['<head>', '<header>', '<title>', '<h1>'],\n    answer: '<h1>'\n  }, {\n    question: '8. In HTML, which character is used to indicate the end of a tag?',\n    options: ['/', '\\\\', '!', ':'],\n    answer: '/'\n  }, {\n    question: '9. Which HTML element is used to specify a caption for an image?',\n    options: ['<caption>', '<legend>', '<label>', '<description>'],\n    answer: '<caption>'\n  }, {\n    question: '10. Which of the following is an example of a block-level element in HTML?',\n    options: ['<span>', '<div>', '<a>', '<strong>'],\n    answer: '<div>'\n  }\n\n  // Add more questions and options as needed\n  ]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // State to keep track of the selected option\n\n  // Function to handle button click for showing the next question\n  const handleNextQuestion = () => {\n    // Check if an option is selected\n    if (!selectedOption) {\n      alert('Please select an option');\n      return;\n    }\n    // Check if it's the last question\n    if (currentQuestionIndex === questions.length - 1) {\n      alert('End of questions');\n      return;\n    }\n    // Increment the current question index\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    // Clear the selected option for the next question\n    setSelectedOption('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'black',\n        width: '80%',\n        height: '750px',\n        marginTop: '80px',\n        marginLeft: '200px'\n      },\n      className: \"rounded-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl ml-48  pt-32\",\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 pt-20 ml-56 text-4xl\",\n        children: [questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: handleOptionChange,\n            className: \"form-radio text-blue-500 h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 5\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#3d8fdb'\n            },\n            children: \"Selected Answer : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'green'\n            },\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but,\n          className: \"rounded-full\",\n          onClick: handleNextQuestion,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight,\n            className: \"text-3xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n_s(Htmlpage, \"a89XxAi7DTnjGjw38sSx9pL7fW4=\");\n_c = Htmlpage;\nexport default Htmlpage;\nvar _c;\n$RefreshReg$(_c, \"Htmlpage\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","Htmlpage","_s","document","body","style","fontFamily","background","color","but","position","left","bottom","width","height","selectedOption","setSelectedOption","handleOptionChange","event","target","value","questions","question","options","answer","currentQuestionIndex","setCurrentQuestionIndex","handleNextQuestion","alert","length","children","marginTop","marginLeft","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","checked","onChange","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/ACER/OneDrive/Desktop/Mainproject/quiz/src/Componend/Htmlpage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Htmlpage = () => {\r\n    document.body.style.fontFamily='Roboto Slab, serif';\r\n    document.body.style.background=\"#3d8fdb\"\r\n    document.body.style.color=\"white\"\r\n\r\n    const but={\r\n        position:'relative',\r\n        left:'1200px',\r\n        bottom:'330px',\r\n       \r\n        width:'100px',\r\n        height:'200px',\r\n        background:'#292828'\r\n    }\r\n\r\n    \r\n        const [selectedOption, setSelectedOption] = useState('');\r\n\r\n        const handleOptionChange = (event) => {\r\n            setSelectedOption(event.target.value);\r\n          };\r\n\r\n          const [questions] = useState([\r\n           {\r\n    question: '1. What does HTML stand for?',\r\n    options: [\r\n        'Hyper Text Markup Language',\r\n        'High Tech Markup Language',\r\n        'Hyperlink and Text Markup Language',\r\n        'Home Tool Markup Language',\r\n    ],\r\n    answer: 'Hyper Text Markup Language'\r\n},\r\n{\r\n    question: '2. Which HTML tag is used to define an unordered list?',\r\n    options: [\r\n        '<ul>',\r\n        '<ol>',\r\n        '<li>',\r\n        '<list>',\r\n    ],\r\n    answer: '<ul>'\r\n},\r\n{\r\n    question: '3. What is the correct HTML tag for inserting a line break?',\r\n    options: [\r\n        '<br>',\r\n        '<lb>',\r\n        '<break>',\r\n        '<newline>',\r\n    ],\r\n    answer: '<br>'\r\n},\r\n{\r\n    question: '4. What does the HTML <img> tag stand for?',\r\n    options: [\r\n        'Image',\r\n        'Insert',\r\n        'Import',\r\n        'Include',\r\n    ],\r\n    answer: 'Image'\r\n},\r\n{\r\n    question: '5. Which attribute is used to define inline styles in HTML?',\r\n    options: [\r\n        'style',\r\n        'class',\r\n        'id',\r\n        'display',\r\n    ],\r\n    answer: 'style'\r\n},\r\n{\r\n    question: '6. What is the correct HTML for creating a hyperlink?',\r\n    options: [\r\n        '<a href=\"http://www.example.com\">Link</a>',\r\n        '<link href=\"http://www.example.com\">',\r\n        '<href=\"http://www.example.com\">Link</href>',\r\n        '<hyperlink=\"http://www.example.com\">Link</hyperlink>',\r\n    ],\r\n    answer: '<a href=\"http://www.example.com\">Link</a>'\r\n},\r\n{\r\n    question: '7. Which HTML tag is used to define the header for a document or section?',\r\n    options: [\r\n        '<head>',\r\n        '<header>',\r\n        '<title>',\r\n        '<h1>',\r\n    ],\r\n    answer: '<h1>'\r\n},\r\n{\r\n    question: '8. In HTML, which character is used to indicate the end of a tag?',\r\n    options: [\r\n        '/',\r\n        '\\\\',\r\n        '!',\r\n        ':',\r\n    ],\r\n    answer: '/'\r\n},\r\n{\r\n    question: '9. Which HTML element is used to specify a caption for an image?',\r\n    options: [\r\n        '<caption>',\r\n        '<legend>',\r\n        '<label>',\r\n        '<description>',\r\n    ],\r\n    answer: '<caption>'\r\n},\r\n{\r\n    question: '10. Which of the following is an example of a block-level element in HTML?',\r\n    options: [\r\n        '<span>',\r\n        '<div>',\r\n        '<a>',\r\n        '<strong>',\r\n    ],\r\n    answer: '<div>'\r\n}\r\n\r\n            // Add more questions and options as needed\r\n          ]);\r\n\r\n          const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n          // State to keep track of the selected option\r\n         \r\n\r\n            // Function to handle button click for showing the next question\r\n  const handleNextQuestion = () => {\r\n    // Check if an option is selected\r\n    if (!selectedOption) {\r\n      alert('Please select an option');\r\n      return;\r\n    }\r\n    // Check if it's the last question\r\n    if (currentQuestionIndex === questions.length - 1) {\r\n      alert('End of questions');\r\n      return;\r\n    }\r\n    // Increment the current question index\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    // Clear the selected option for the next question\r\n    setSelectedOption('');\r\n  };\r\n\r\n  return ( \r\n    <>\r\n <div style={{ background: 'black', width: '80%', height: '750px', marginTop: '80px', marginLeft: '200px' }} className='rounded-full'>\r\n\r\n<h1 className='text-4xl ml-48  pt-32'>{questions[currentQuestionIndex].question}</h1>\r\n<div className=\"flex flex-col gap-2 pt-20 ml-56 text-4xl\">\r\n  {questions[currentQuestionIndex].options.map((option, index) => (\r\n    <label key={index} className=\"inline-flex items-center\">\r\n      <input\r\n        type=\"radio\"\r\n        value={option}\r\n        checked={selectedOption === option}\r\n        onChange={handleOptionChange}\r\n        className=\"form-radio text-blue-500 h-5 w-5\"\r\n      />\r\n      <span className=\"ml-2\">{option}</span>\r\n    </label>\r\n  ))}\r\n  <p className=\"mt-20\">\r\n    <span style={{ color: '#3d8fdb' }}>Selected Answer : </span>\r\n    <span style={{ color: 'green' }}>{selectedOption}</span>\r\n  </p>\r\n  <button style={but} className='rounded-full' onClick={handleNextQuestion}>\r\n    <FontAwesomeIcon icon={faArrowRight} className=\"text-3xl\" />\r\n  </button>\r\n</div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Htmlpage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}