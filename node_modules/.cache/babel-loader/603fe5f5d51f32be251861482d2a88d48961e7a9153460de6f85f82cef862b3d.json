{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\OneDrive\\\\Desktop\\\\Mainproject\\\\quiz\\\\src\\\\Componend\\\\Htmlpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Htmlpage = () => {\n  _s();\n  document.body.style.fontFamily = 'Nunito, sans-serif';\n  document.body.style.background = '#1976D2';\n  document.body.style.color = 'white';\n  const but = {\n    position: 'relative',\n    left: '1200px',\n    bottom: '330px',\n    width: '100px',\n    height: '200px',\n    background: '#292828'\n  };\n  const but1 = {\n    position: 'relative',\n    left: '900px',\n    top: '60px',\n    width: '160px',\n    height: '80px',\n    background: 'green'\n  };\n  const [selectedOptions, setSelectedOptions] = useState(Array(10).fill(''));\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const handleOptionChange = (index, event) => {\n    const newSelectedOptions = [...selectedOptions];\n    newSelectedOptions[index] = event.target.value;\n    setSelectedOptions(newSelectedOptions);\n  };\n  const calculateScore = () => {\n    let totalScore = 0;\n    for (let i = 0; i < questions.length; i++) {\n      if (selectedOptions[i] === questions[i].answer) {\n        totalScore++;\n      }\n    }\n    return totalScore;\n  };\n  const handleNextQuestion = () => {\n    if (selectedOptions[currentQuestionIndex] !== '') {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      alert('Please select an answer before moving to the next question.');\n    }\n  };\n  const handleCalculateScore = () => {\n    const calculatedScore = calculateScore();\n    navigate('/Scorepage', {\n      state: {\n        score: calculatedScore,\n        selectedOptions,\n        questions\n      }\n    });\n  };\n  const [questions] = useState([\n    // Define your questions array here\n  ]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'black',\n        width: '80%',\n        height: '750px',\n        marginTop: '80px',\n        marginLeft: '200px'\n      },\n      className: \"rounded-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl ml-48  pt-32\",\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 pt-20 ml-56 text-4xl\",\n        children: [questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option,\n            checked: selectedOptions[currentQuestionIndex] === option,\n            onChange: e => handleOptionChange(currentQuestionIndex, e),\n            className: \"form-radio text-blue-500 h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-24\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-4xl\",\n            style: {\n              color: '#3d8fdb'\n            },\n            children: \"Selected Answer : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-5xl\",\n            style: {\n              color: selectedOptions[currentQuestionIndex] === questions[currentQuestionIndex].answer ? 'green' : 'red'\n            },\n            children: selectedOptions[currentQuestionIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), currentQuestionIndex === questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but1,\n          className: \"rounded-full\",\n          onClick: handleCalculateScore,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: but,\n          className: \"rounded-full\",\n          onClick: handleNextQuestion,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowRight,\n            className: \"text-3xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Htmlpage, \"QG212KjL9jpB/kj6oKL1sLEc/0w=\", false, function () {\n  return [useNavigate];\n});\n_c = Htmlpage;\nexport default Htmlpage;\nvar _c;\n$RefreshReg$(_c, \"Htmlpage\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faArrowRight","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Htmlpage","_s","document","body","style","fontFamily","background","color","but","position","left","bottom","width","height","but1","top","selectedOptions","setSelectedOptions","Array","fill","navigate","currentQuestionIndex","setCurrentQuestionIndex","handleOptionChange","index","event","newSelectedOptions","target","value","calculateScore","totalScore","i","questions","length","answer","handleNextQuestion","alert","handleCalculateScore","calculatedScore","state","score","children","marginTop","marginLeft","className","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","type","checked","onChange","e","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/ACER/OneDrive/Desktop/Mainproject/quiz/src/Componend/Htmlpage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Htmlpage = () => {\r\n    document.body.style.fontFamily = 'Nunito, sans-serif';\r\n    document.body.style.background = '#1976D2';\r\n    document.body.style.color = 'white';\r\n\r\n    const but = {\r\n        position: 'relative',\r\n        left: '1200px',\r\n        bottom: '330px',\r\n        width: '100px',\r\n        height: '200px',\r\n        background: '#292828'\r\n    };\r\n\r\n    const but1 = {\r\n        position: 'relative',\r\n        left: '900px',\r\n        top: '60px',\r\n        width: '160px',\r\n        height: '80px',\r\n        background: 'green'\r\n    };\r\n\r\n    const [selectedOptions, setSelectedOptions] = useState(Array(10).fill(''));\r\n    const navigate = useNavigate();\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n    const handleOptionChange = (index, event) => {\r\n        const newSelectedOptions = [...selectedOptions];\r\n        newSelectedOptions[index] = event.target.value;\r\n        setSelectedOptions(newSelectedOptions);\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        let totalScore = 0;\r\n        for (let i = 0; i < questions.length; i++) {\r\n            if (selectedOptions[i] === questions[i].answer) {\r\n                totalScore++;\r\n            }\r\n        }\r\n        return totalScore;\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (selectedOptions[currentQuestionIndex] !== '') {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        } else {\r\n            alert('Please select an answer before moving to the next question.');\r\n        }\r\n    };\r\n\r\n    const handleCalculateScore = () => {\r\n        const calculatedScore = calculateScore();\r\n        navigate('/Scorepage', { state: { score: calculatedScore, selectedOptions, questions } });\r\n    };\r\n\r\n    const [questions] = useState([\r\n        // Define your questions array here\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ background: 'black', width: '80%', height: '750px', marginTop: '80px', marginLeft: '200px' }} className=\"rounded-full\">\r\n                <h1 className=\"text-4xl ml-48  pt-32\">{questions[currentQuestionIndex].question}</h1>\r\n                <div className=\"flex flex-col gap-2 pt-20 ml-56 text-4xl\">\r\n                    {questions[currentQuestionIndex].options.map((option, index) => (\r\n                        <label key={index} className=\"inline-flex items-center\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                value={option}\r\n                                checked={selectedOptions[currentQuestionIndex] === option}\r\n                                onChange={(e) => handleOptionChange(currentQuestionIndex, e)}\r\n                                className=\"form-radio text-blue-500 h-5 w-5\"\r\n                            />\r\n                            <span className=\"ml-2\">{option}</span>\r\n                        </label>\r\n                    ))}\r\n                    <p className=\"mt-24\">\r\n                        <span className=\"text-4xl\" style={{ color: '#3d8fdb' }}>Selected Answer : </span>\r\n                        <span className=\"text-5xl\" style={{ color: selectedOptions[currentQuestionIndex] === questions[currentQuestionIndex].answer ? 'green' : 'red' }}>\r\n                            {selectedOptions[currentQuestionIndex]}\r\n                        </span>\r\n                    </p>\r\n                    {currentQuestionIndex === questions.length - 1 ? (\r\n                        <button style={but1} className=\"rounded-full\" onClick={handleCalculateScore}>\r\n                            Submit\r\n                        </button>\r\n                    ) : (\r\n                        <button style={but} className=\"rounded-full\" onClick={handleNextQuestion}>\r\n                            <FontAwesomeIcon icon={faArrowRight} className=\"text-3xl\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Htmlpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}